@model IEnumerable<SistemaVotacao.Models.Eleitores>

@{
    ViewData["Title"] = "Gerenciar Eleitores";
    var userRole = Context.Session.GetString("UserRole");
    var canEdit = userRole == "Adm" || userRole == "Gerente";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="fas fa-users"></i> @ViewData["Title"]</h4>
                    @if (canEdit)
                    {
                        <a href="@Url.Action("Create", "Eleitores")" class="btn btn-light btn-sm">
                            <i class="fas fa-plus"></i> Novo Eleitor
                        </a>
                    }
                </div>
                <div class="card-body">
                    <!-- Filtros e Busca -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <input type="text" id="searchInput" class="form-control" placeholder="Buscar por nome ou título...">
                                <button class="btn btn-outline-secondary" type="button" id="btnSearch">
                                    <i class="fas fa-search"></i>
                                </button>
                                <button class="btn btn-outline-secondary" type="button" id="btnClearSearch">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6 text-end">
                            <div class="btn-group">
                                <button type="button" class="btn btn-outline-primary btn-sm" id="btnRefresh">
                                    <i class="fas fa-sync-alt"></i> Atualizar
                                </button>
                                <button type="button" class="btn btn-outline-success btn-sm" onclick="exportToExcel()">
                                    <i class="fas fa-file-excel"></i> Exportar
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Tabela de Eleitores -->
                    <div class="table-responsive">
                        <table id="tabelaEleitores" class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Nome</th>
                                    <th>Título Eleitoral</th>
                                    <th>Data de Cadastro</th>
                                    <th>Ações</th>
                                </tr>
                            </thead>
                            <tbody id="tbodyEleitores">
                                @foreach (var eleitor in Model)
                                {
                                    <tr>
                                        <td>@eleitor.id_eleitor</td>
                                        <td>@eleitor.nome</td>
                                        <td>
                                            <span class="badge bg-secondary">@eleitor.titulo_eleitoral</span>
                                        </td>
                                        <td>@eleitor.criado_em.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a href="@Url.Action("Details", "Eleitores", new { id = eleitor.id_eleitor })"
                                                   class="btn btn-info" title="Detalhes">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                @if (canEdit)
                                                {
                                                    <a href="@Url.Action("Edit", "Eleitores", new { id = eleitor.id_eleitor })"
                                                       class="btn btn-warning" title="Editar">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-danger btn-excluir"
                                                            data-id="@eleitor.id_eleitor"
                                                            data-nome="@eleitor.nome"
                                                            title="Excluir">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Paginação (se necessário) -->
                    <!-- Nota: A paginação está sendo feita no cliente, mas em um sistema real, seria no servidor -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Confirmação de Exclusão -->
<div class="modal fade" id="modalExcluir" tabindex="-1" aria-labelledby="modalExcluirLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="modalExcluirLabel">
                    <i class="fas fa-exclamation-triangle"></i> Confirmar Exclusão
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir o eleitor <strong id="nomeEleitorExcluir"></strong>?</p>
                <p class="text-danger"><strong>Esta ação não poderá ser desfeita!</strong></p>
                <div class="alert alert-warning">
                    <i class="fas fa-info-circle"></i> <strong>Atenção:</strong> Não é possível excluir eleitores que já possuem votos registrados ou estão vinculados a usuários.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
                <button type="button" class="btn btn-danger" id="btnConfirmarExclusao">
                    <i class="fas fa-trash"></i> Excluir
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Configurar eventos de busca e filtro (client-side)
            configurarEventos();
        });

        function configurarEventos() {
            // Busca
            document.getElementById('btnSearch').addEventListener('click', function() {
                aplicarFiltro();
            });

            document.getElementById('searchInput').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    aplicarFiltro();
                }
            });

            document.getElementById('btnClearSearch').addEventListener('click', function() {
                document.getElementById('searchInput').value = '';
                aplicarFiltro();
            });

            // Atualizar
            document.getElementById('btnRefresh').addEventListener('click', function() {
                window.location.reload();
            });

            // Eventos de exclusão
            document.querySelectorAll('.btn-excluir').forEach(btn => {
                btn.addEventListener('click', function() {
                    const id = this.getAttribute('data-id');
                    const nome = this.getAttribute('data-nome');
                    abrirModalExclusao(id, nome);
                });
            });
        }

        function aplicarFiltro() {
            const filter = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('#tbodyEleitores tr');

            rows.forEach(row => {
                const nome = row.cells[1].textContent.toLowerCase();
                const titulo = row.cells[2].textContent.toLowerCase();
                if (nome.includes(filter) || titulo.includes(filter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function abrirModalExclusao(id, nome) {
            document.getElementById('nomeEleitorExcluir').textContent = nome;
            const modal = new bootstrap.Modal(document.getElementById('modalExcluir'));

            document.getElementById('btnConfirmarExclusao').onclick = function() {
                excluirEleitor(id);
                modal.hide();
            };

            modal.show();
        }

        function excluirEleitor(id) {
            fetch(`/Eleitores/Delete/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    mostrarMensagem('Eleitor excluído com sucesso!', 'success');
                    // Recarregar a página após exclusão
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    mostrarMensagem(data.message || 'Erro ao excluir eleitor.', 'danger');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                mostrarMensagem('Erro ao excluir eleitor.', 'danger');
            });
        }

        function exportToExcel() {
            // Implementação básica de exportação
            let csv = 'ID,Nome,Título Eleitoral,Data Cadastro\n';
            document.querySelectorAll('#tbodyEleitores tr').forEach(row => {
                if (row.style.display !== 'none') {
                    const cells = row.querySelectorAll('td');
                    csv += `"${cells[0].textContent}","${cells[1].textContent}","${cells[2].textContent}","${cells[3].textContent}"\n`;
                }
            });

            const blob = new Blob([csv], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `eleitores_${new Date().toISOString().split('T')[0]}.csv`;
            a.click();
            window.URL.revokeObjectURL(url);
        }

        function mostrarMensagem(mensagem, tipo) {
            // Implementar toast ou alerta
            alert(mensagem); // Substituir por um sistema de toast mais elegante
        }
    </script>
}